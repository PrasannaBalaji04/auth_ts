openapi: 3.0.3
info:
  title: Auth-ts
  description: |-
    Sign-Up, Login & Refresh Token RESTful APIs using Node.js, Express, MongoDB & TypeScript
  contact:
    email: prasannabalaji.rangarajan@bounteous.com
  version: 2.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: user
    description: Authentication Endpoints
paths:
  /register:
    post:
      tags:
        - user
      summary: Sign-Up User
      description: This is used to sign-up a new user.
      operationId: signupUser
      requestBody:
        description: Create user
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                DoB:
                  type: string
                  format: DD/MM/YYYY
                  nullable: true
                token:
                  type: string
                mobile:
                  type: string
              required:
                - name
                - email
                - password
                - DoB
                - mobile
            examples:
              With DOB:
                value:
                  name: prasannaB
                  email: zxcvk@gmail.com
                  password: Password123
                  DoB: 2002/04/24
                  token: " "
                  mobile: 9870567349
              Wothout DOB:
                value:
                  name: Balaji R
                  email: prasanna@gmail.com
                  password: Abcdef123
                  DoB: 2001/09/01
                  token: " "
                  mobile: 9488116600
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: User Created
        '400':
          description: Invalid Request Body
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid Request Body
        '409':
          description: Email already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email already exists
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: The respective error message will be shown
  /login:
    post:
      tags:
        - user
      summary: Logs in a user
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
                email: zxcvk@gmail.com
                password: Asdfghjkl123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: Login successful
                  accessToken:
                   type: string
        '401':
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid email or password
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: The respective error message will be shown
  /refresh:
    post:
      tags:
        - user
      summary: Refresh Token
      description: This is used to generate new access token.
      operationId: refreshToken
      security:
        - cookieAuth: []
      responses:
        '201':
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  accessToken:
                   type: string
        '403':
          description: Unauthorized 
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              examples:
                Unauthorized:
                  value:
                    success: false
                    message: Unauthorized
                Invalid Refresh Token:
                  value:
                    success: false
                    message: Invalid Refresh Token
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: The respective error message will be shown
components:
  schemas:
    
    User:
      type: object
      properties:
        _id:
          type: string
          format: MongoDB ObjectID
          example: '64d9b38d5f145019df819ad6'
        name:
          type: string
          example: Shimmy Roy
        dob:
          type: string
          format: YYYY-MM-DD
          example: '2000-01-01'
        email:
          type: string
          example: string@gmail.com
        password:
          type: string
          example: 'Password123'
        phone:
          type: string
          example: '9876543210'
      xml:
        name: user
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: jwt
      in: cookie